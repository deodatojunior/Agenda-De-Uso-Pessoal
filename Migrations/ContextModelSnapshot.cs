// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoIntegrador.Database;

namespace ProjetoIntegrador.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ProjetoIntegrador.Models.Anotacao", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("id");

                    b.ToTable("Anotacao");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Evento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data_evento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(10000);

                    b.HasKey("id");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("ProjetoIntegrador.Models.Lembrete", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("texto")
                        .HasColumnType("longtext CHARACTER SET utf8mb4")
                        .HasMaxLength(10000);

                    b.HasKey("id");

                    b.ToTable("Lembretes");

                    b.HasData(
                        new
                        {
                            id = 1,
                            data = new DateTime(2021, 6, 1, 13, 41, 28, 584, DateTimeKind.Local).AddTicks(2328),
                            texto = "Hoje foi um belo dia, espero que amanhã seja melhor!"
                        },
                        new
                        {
                            id = 2,
                            data = new DateTime(2021, 6, 1, 13, 41, 28, 586, DateTimeKind.Local).AddTicks(2315),
                            texto = "Hoje foi um dia comum, espero que amanhã seja melhor!"
                        },
                        new
                        {
                            id = 3,
                            data = new DateTime(2021, 6, 1, 13, 41, 28, 586, DateTimeKind.Local).AddTicks(2376),
                            texto = "Hoje foi um péssimo dia, espero que amanhã seja melhor!"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
